{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/film/film.component.css","webpack:///./src/app/film/film.component.html","webpack:///./src/app/film/film.component.ts","webpack:///./src/app/films.service.ts","webpack:///./src/app/list/list.component.css","webpack:///./src/app/list/list.component.html","webpack:///./src/app/list/list.component.ts","webpack:///./src/app/search/search.component.css","webpack:///./src/app/search/search.component.html","webpack:///./src/app/search/search.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {SearchComponent} from './search/search.component';\nimport {FilmComponent} from './film/film.component';\nimport {ListComponent} from './list/list.component';\n\nconst routes: Routes = [\n    {path: 'search', component: SearchComponent},\n    {path: 'film/:id', component: FilmComponent},\n    {path: 'list', component: ListComponent},\n    {path: 'search', component: SearchComponent},\n    {path: '', redirectTo: '/search', pathMatch: 'full'}\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forRoot(routes)\n    ],\n    exports: [RouterModule],\n    declarations: []\n})\nexport class AppRoutingModule {\n}\n","module.exports = \".app-nav a {\\n    margin: 0 0.5rem;\\n}\"","module.exports = \"<div>\\n    <mat-toolbar>\\n        <span>Films</span>\\n\\n        <nav class=\\\"app-nav\\\">\\n            <a routerLink=\\\"/search\\\" mat-raised-button color=\\\"primary\\\">Search</a>\\n            <a routerLink=\\\"/list\\\" mat-raised-button color=\\\"primary\\\">Saved</a>\\n        </nav>\\n    </mat-toolbar>\\n\\n    <router-outlet></router-outlet>\\n</div>\"","import {Component} from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n    title = 'films';\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\n\nimport {LocalStorageModule} from 'angular-2-local-storage';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatInputModule} from '@angular/material/input';\n\nimport {HttpClientModule} from '@angular/common/http';\n\nimport {AppComponent} from './app.component';\nimport {AppRoutingModule} from './app-routing.module';\nimport {SearchComponent} from './search/search.component';\nimport {ListComponent} from './list/list.component';\nimport {FilmComponent} from './film/film.component';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        SearchComponent,\n        ListComponent,\n        FilmComponent,\n    ],\n    imports: [\n        LocalStorageModule.withConfig({\n            prefix: 'films',\n            storageType: 'localStorage'\n        }),\n        BrowserModule,\n        BrowserAnimationsModule,\n        FormsModule,\n        HttpClientModule,\n        MatToolbarModule,\n        MatInputModule,\n        AppRoutingModule,\n        MatButtonModule\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"film\\\">\\n    <img [src]=\\\"film.Poster\\\" [alt]=\\\"film.Title\\\" class=\\\"film-poster\\\">\\n\\n    <div class=\\\"film-details\\\">\\n        <div>Title: {{ film.Title }}</div>\\n        <div>Year: {{ film.Year }}</div>\\n        <div>Actors: {{ film.Actors }}</div>\\n        <div>imdbID: {{ film.imdbID }}</div>\\n    </div>\\n</div>\"","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {FilmsService} from '../films.service';\nimport {Film} from '../Film';\n\n@Component({\n    selector: 'app-film',\n    templateUrl: './film.component.html',\n    styleUrls: ['./film.component.css']\n})\nexport class FilmComponent implements OnInit {\n\n    private route: ActivatedRoute;\n    private filmsService: FilmsService;\n    private film: Film;\n\n    constructor(route: ActivatedRoute, filmsService: FilmsService) {\n        this.route = route;\n        this.filmsService = filmsService;\n    }\n\n    async ngOnInit() {\n        this.film = await this.filmsService.getById(\n            this.route.snapshot.paramMap.get('id')\n        );\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Film} from './Film';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FilmsService {\n\n    private http: HttpClient;\n    private apiKey = '6b7e837e';\n\n    constructor(http: HttpClient) {\n        this.http = http;\n    }\n\n    search(query: string): Promise<Film[]> {\n\n        return new Promise<Film[]>((resolve, reject) => {\n\n            this\n                .http\n                .get(`http://www.omdbapi.com/?apikey=${this.apiKey}&s=${query}`)\n                .subscribe((response: any) => {\n\n                    if (response.Response === 'True') {\n                        resolve(response.Search);\n                    } else {\n                        resolve([]);\n                    }\n                });\n        });\n    }\n\n    getById(id: string): Promise<Film> {\n\n        return new Promise<Film>((resolve, reject) => {\n\n            this\n                .http\n                .get(`http://www.omdbapi.com/?apikey=${this.apiKey}&i=${id}`)\n                .subscribe((response: any) => {\n\n                    if (response.Response === 'True') {\n                        resolve(response);\n                    } else {\n                        resolve(null);\n                    }\n                });\n        });\n    }\n}\n","module.exports = \"\"","module.exports = \"<div *ngFor=\\\"let film of films()\\\" class=\\\"film-item\\\">\\n    <a [routerLink]=\\\"'/film/' + film.imdbID\\\">\\n        <img [src]=\\\"film.Poster\\\" [alt]=\\\"film.Title\\\" class=\\\"film-poster\\\">\\n    </a>\\n\\n    <span>{{ film.Title }}</span>\\n\\n    <button type=\\\"button\\\" (click)=\\\"removeFromSaved(film.imdbID)\\\">Remove</button>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {LocalStorageService} from 'angular-2-local-storage';\n\n@Component({\n    selector: 'app-list',\n    templateUrl: './list.component.html',\n    styleUrls: ['./list.component.css']\n})\nexport class ListComponent {\n\n    private localStorage: LocalStorageService;\n\n    constructor(localStorage: LocalStorageService) {\n        this.localStorage = localStorage;\n    }\n\n    films() {\n        return this.localStorage.keys().map((id: string) => this.localStorage.get(id));\n    }\n\n    removeFromSaved(id: string) {\n        this.localStorage.remove(id);\n    }\n}\n","module.exports = \".input-query {\\n    margin: 1rem 0;\\n}\\n\\n.film-item {\\n    margin-bottom: 1rem;\\n}\\n\\n.film-poster {\\n    width: 100px;\\n}\\n\"","module.exports = \"<mat-form-field class=\\\"input-query\\\">\\n    <input matInput placeholder=\\\"Film title\\\" name=\\\"query\\\" [ngModel]=\\\"query\\\" (ngModelChange)=\\\"onSearchChange($event)\\\">\\n</mat-form-field>\\n\\n<div *ngFor=\\\"let film of films\\\" class=\\\"film-item\\\">\\n    <a [routerLink]=\\\"'/film/' + film.imdbID\\\">\\n        <img [src]=\\\"film.Poster\\\" [alt]=\\\"film.Title\\\" class=\\\"film-poster\\\">\\n    </a>\\n\\n    <span>{{ film.Title }}</span>\\n\\n    <button type=\\\"button\\\" *ngIf=\\\"!isSaved(film.imdbID)\\\" (click)=\\\"addToSaved(film.imdbID)\\\">\\n        Save\\n    </button>\\n\\n    <div *ngIf=\\\"isSaved(film.imdbID)\\\">\\n        <span>Saved</span>\\n        <button type=\\\"button\\\" (click)=\\\"removeFromSaved(film.imdbID)\\\">Remove</button>\\n    </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {FilmsService} from '../films.service';\nimport {LocalStorageService} from 'angular-2-local-storage';\nimport {Film} from '../Film';\nimport {Subject} from 'rxjs';\nimport {debounceTime} from 'rxjs/operators';\n\n@Component({\n    selector: 'app-search',\n    templateUrl: './search.component.html',\n    styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n\n    private filmsService: FilmsService;\n    private localStorage: LocalStorageService;\n    private films: Film[];\n    private query = 'matrix';\n    private queryChanged = new Subject<string>();\n\n    constructor(filmsService: FilmsService, localStorage: LocalStorageService) {\n        this.filmsService = filmsService;\n        this.localStorage = localStorage;\n\n        this.queryChanged\n            .pipe(debounceTime(250))\n            .subscribe((query: string) => {\n                this.filmsService.search(query).then((films: Film[]) => {\n                    this.films = films;\n                });\n            });\n    }\n\n    ngOnInit(): void {\n        this.onSearchChange('matrix');\n    }\n\n    onSearchChange(query: string) {\n        this.queryChanged.next(query);\n    }\n\n    addToSaved(id: string) {\n        const film: Film = this.films.find((f: Film) => f.imdbID === id);\n\n        this.localStorage.set(id, film);\n    }\n\n    removeFromSaved(id: string) {\n        this.localStorage.remove(id);\n    }\n\n    isSaved(id: string) {\n        return this.localStorage.get(id);\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}